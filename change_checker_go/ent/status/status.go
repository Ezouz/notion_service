// Code generated by ent, DO NOT EDIT.

package status

import (
	"time"
)

const (
	// Label holds the string label denoting the status type in the database.
	Label = "status"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldDbID holds the string denoting the db_id field in the database.
	FieldDbID = "db_id"
	// FieldRowID holds the string denoting the row_id field in the database.
	FieldRowID = "row_id"
	// FieldStatus holds the string denoting the status field in the database.
	FieldStatus = "status"
	// FieldSavedAt holds the string denoting the saved_at field in the database.
	FieldSavedAt = "saved_at"
	// Table holds the table name of the status in the database.
	Table = "status"
)

// Columns holds all SQL columns for status fields.
var Columns = []string{
	FieldID,
	FieldDbID,
	FieldRowID,
	FieldStatus,
	FieldSavedAt,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "status"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"database_status",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// DbIDValidator is a validator for the "db_id" field. It is called by the builders before save.
	DbIDValidator func(string) error
	// RowIDValidator is a validator for the "row_id" field. It is called by the builders before save.
	RowIDValidator func(string) error
	// StatusValidator is a validator for the "status" field. It is called by the builders before save.
	StatusValidator func(string) error
	// DefaultSavedAt holds the default value on creation for the "saved_at" field.
	DefaultSavedAt func() time.Time
	// IDValidator is a validator for the "id" field. It is called by the builders before save.
	IDValidator func(int) error
)
