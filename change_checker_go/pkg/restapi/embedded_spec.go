// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "API notion 42",
    "title": "Notion API",
    "contact": {},
    "version": "0.0.1"
  },
  "paths": {
    "/checkhost": {
      "post": {
        "security": [
          {
            "key": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "tags": [
          "clusters"
        ],
        "summary": "Check computor in inventory db with hostname",
        "parameters": [
          {
            "description": "Host in the cluster payload",
            "name": "ClusterHost",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/computorDef"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful"
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "UnAuthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "ErrorResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "example": 404
        },
        "message": {
          "type": "string",
          "example": "This is an error message"
        }
      }
    },
    "computorDef": {
      "type": "object",
      "properties": {
        "bios_date": {
          "type": "string",
          "example": "2012"
        },
        "down": {
          "type": "string",
          "example": "false"
        },
        "hostname": {
          "type": "string",
          "example": "e1r1p1"
        },
        "ip": {
          "type": "string",
          "example": "10.0.0.0"
        },
        "last_redump": {
          "type": "string",
          "example": "lun. 19 déc. 2022 15:42:10 CET"
        },
        "mac_address": {
          "type": "string",
          "example": "e1:e1:e1:e1:e1:e1"
        },
        "manufacturer": {
          "type": "string",
          "example": "Apple Inc."
        },
        "model": {
          "type": "string",
          "example": "Apple 12"
        },
        "serial": {
          "type": "string",
          "example": "COUCOUJESUISUNSERIAL"
        }
      }
    },
    "principal": {
      "type": "string"
    }
  },
  "securityDefinitions": {
    "key": {
      "type": "apiKey",
      "name": "x-token",
      "in": "header"
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "API notion 42",
    "title": "Notion API",
    "contact": {},
    "version": "0.0.1"
  },
  "paths": {
    "/checkhost": {
      "post": {
        "security": [
          {
            "key": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "tags": [
          "clusters"
        ],
        "summary": "Check computor in inventory db with hostname",
        "parameters": [
          {
            "description": "Host in the cluster payload",
            "name": "ClusterHost",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/computorDef"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful"
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "UnAuthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "ErrorResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "example": 404
        },
        "message": {
          "type": "string",
          "example": "This is an error message"
        }
      }
    },
    "computorDef": {
      "type": "object",
      "properties": {
        "bios_date": {
          "type": "string",
          "example": "2012"
        },
        "down": {
          "type": "string",
          "example": "false"
        },
        "hostname": {
          "type": "string",
          "example": "e1r1p1"
        },
        "ip": {
          "type": "string",
          "example": "10.0.0.0"
        },
        "last_redump": {
          "type": "string",
          "example": "lun. 19 déc. 2022 15:42:10 CET"
        },
        "mac_address": {
          "type": "string",
          "example": "e1:e1:e1:e1:e1:e1"
        },
        "manufacturer": {
          "type": "string",
          "example": "Apple Inc."
        },
        "model": {
          "type": "string",
          "example": "Apple 12"
        },
        "serial": {
          "type": "string",
          "example": "COUCOUJESUISUNSERIAL"
        }
      }
    },
    "principal": {
      "type": "string"
    }
  },
  "securityDefinitions": {
    "key": {
      "type": "apiKey",
      "name": "x-token",
      "in": "header"
    }
  }
}`))
}
