// Code generated by go-swagger; DO NOT EDIT.

package clusters

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"gitlab.42paris.fr/utilities/notion_service/pkg/models"
)

// PostCheckhostNoContentCode is the HTTP code returned for type PostCheckhostNoContent
const PostCheckhostNoContentCode int = 204

/*PostCheckhostNoContent Successful

swagger:response postCheckhostNoContent
*/
type PostCheckhostNoContent struct {
}

// NewPostCheckhostNoContent creates PostCheckhostNoContent with default headers values
func NewPostCheckhostNoContent() *PostCheckhostNoContent {

	return &PostCheckhostNoContent{}
}

// WriteResponse to the client
func (o *PostCheckhostNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(204)
}

// PostCheckhostBadRequestCode is the HTTP code returned for type PostCheckhostBadRequest
const PostCheckhostBadRequestCode int = 400

/*PostCheckhostBadRequest Bad request

swagger:response postCheckhostBadRequest
*/
type PostCheckhostBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewPostCheckhostBadRequest creates PostCheckhostBadRequest with default headers values
func NewPostCheckhostBadRequest() *PostCheckhostBadRequest {

	return &PostCheckhostBadRequest{}
}

// WithPayload adds the payload to the post checkhost bad request response
func (o *PostCheckhostBadRequest) WithPayload(payload *models.ErrorResponse) *PostCheckhostBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post checkhost bad request response
func (o *PostCheckhostBadRequest) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostCheckhostBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostCheckhostUnauthorizedCode is the HTTP code returned for type PostCheckhostUnauthorized
const PostCheckhostUnauthorizedCode int = 401

/*PostCheckhostUnauthorized UnAuthorized

swagger:response postCheckhostUnauthorized
*/
type PostCheckhostUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewPostCheckhostUnauthorized creates PostCheckhostUnauthorized with default headers values
func NewPostCheckhostUnauthorized() *PostCheckhostUnauthorized {

	return &PostCheckhostUnauthorized{}
}

// WithPayload adds the payload to the post checkhost unauthorized response
func (o *PostCheckhostUnauthorized) WithPayload(payload *models.ErrorResponse) *PostCheckhostUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post checkhost unauthorized response
func (o *PostCheckhostUnauthorized) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostCheckhostUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostCheckhostNotFoundCode is the HTTP code returned for type PostCheckhostNotFound
const PostCheckhostNotFoundCode int = 404

/*PostCheckhostNotFound Not found

swagger:response postCheckhostNotFound
*/
type PostCheckhostNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewPostCheckhostNotFound creates PostCheckhostNotFound with default headers values
func NewPostCheckhostNotFound() *PostCheckhostNotFound {

	return &PostCheckhostNotFound{}
}

// WithPayload adds the payload to the post checkhost not found response
func (o *PostCheckhostNotFound) WithPayload(payload *models.ErrorResponse) *PostCheckhostNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post checkhost not found response
func (o *PostCheckhostNotFound) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostCheckhostNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostCheckhostInternalServerErrorCode is the HTTP code returned for type PostCheckhostInternalServerError
const PostCheckhostInternalServerErrorCode int = 500

/*PostCheckhostInternalServerError Server error

swagger:response postCheckhostInternalServerError
*/
type PostCheckhostInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewPostCheckhostInternalServerError creates PostCheckhostInternalServerError with default headers values
func NewPostCheckhostInternalServerError() *PostCheckhostInternalServerError {

	return &PostCheckhostInternalServerError{}
}

// WithPayload adds the payload to the post checkhost internal server error response
func (o *PostCheckhostInternalServerError) WithPayload(payload *models.ErrorResponse) *PostCheckhostInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post checkhost internal server error response
func (o *PostCheckhostInternalServerError) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostCheckhostInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
